// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser} from "@lezer/lr"
import {NodeProp} from "@lezer/common"
const spec_identifier = {__proto__:null,"|":20, "&":22, not:24, index:28, in:32, is:34, isna:36, notna:38, None:48, True:50, False:50}
export const parser = LRParser.deserialize({
  version: 13,
  states: "(|OVQPOOO[QPO'#C_OOQO'#Cy'#CyOpQPO'#C^QOQPOOOxQPO'#CbOOQO'#Ci'#CiO!TQPO'#DSObQPO'#DVOOQO'#DP'#DPO!iQPO'#CeOOQO'#Ca'#CaO!wQPO'#CxO#PQPO,58yO#SQPO,58yObQPO'#DPOOQO-E6w-E6wO#XQPO,58|O#^QPO,59nO#oQPO,59nO#tQPO,59nO#{QPO,59qObQPO,59lObQPO,59lO$WQPO'#DWOOQO,59d,59dO$`QPO,59dOOQO1G.e1G.eO$eQPO1G.eO$jQPO,59kOOQO1G.h1G.hOOQO'#Cq'#CqOOQO'#Cp'#CpOOQO1G/Y1G/YO${QPO'#CpO#^QPO1G/YOOQO1G/]1G/]O%TQPO1G/WOOQO1G/W1G/WO%fQPO,59rO%nQPO,59rOOQO1G/O1G/OO%vQPO7+$PO%{QPO'#DUO&TQPO,59[O&YQPO,59[OOQO7+$t7+$tOOQO,59g,59gO&_QPO1G/^OOQO-E6y-E6yOOQO<<Gk<<GkO&gQPO,59pO&oQPO,59pOOQO1G.v1G.vO&wQPO1G.vPkQPO'#C{OOQO,59f,59fO&|QPO1G/[OOQO-E6x-E6xOOQO7+$b7+$bP#jQPO'#Cz",
  stateData: "'U~OrOS~OSPO~OS[OVTO[_O^VOjWOwUO~OSPOpQX~OWaOfUXgUX~O[cO_bO`bOadObbOcbO~OYfOZgOfXXgXX~OgiOwUO~OflOgkO~OVnO~OSrOVpOipOupOwoO~O`sO~O[sO~P#^OYfOZgOktO~OfwOgzX~OgyO~OS[O~OYfOZgOfsagsaksa~Og|OwoO~OZgOYtiftigtikti~OwUOgza~Of!QOgza~Og!SO~Of!TOgxX~Oh!VO~Og!WO~OwUOgzi~OwoOgxa~Of!ZOgxa~Oh!]O~OwoOgxi~O",
  goto: "$U{PP|!PP!T!WPP!WPPP!ZPPPPPP!j!qPPPPPP#O#U#[#bPPP#h#wP#wP$O#w$RRSOTQORR]PRZPYVPW_fgQh[V!Pw!Q!XSqbdR!OsUpbdsQ{rV!Y!T!Z!^Q^PRzlQROR`RQ!U{R![!UQxhR!RxQYPQeWQm_QufRvgZXPW_fgR}rRj[",
  nodeNames: "âš  Script QueryStatement SimpleQueryExpression [ IndexExpression IndexSlicingExpression Number : BooleanIndexExpression | & not ColumnNameExpression index CompareOp in is isna notna IndexSelectorExpression String , ] None Boolean ( ) ColumnSelectionExpression",
  maxTerm: 42,
  nodeProps: [
    [NodeProp.group, 2,"Statement"]
  ],
  skippedNodes: [0],
  repeatNodeCount: 3,
  tokenData: ".S~RsXY#`[]#`pq#`qr#zrs$Vwx$|xy%nyz%s|}%x!O!P%}!Q!R'f!R![(d![!]*p!^!_*u!_!`#z!`!a+Q!c!d+Y!d!e+n!e!t+Y!t!u-Q!u!w+Y!w!x,f!x!}+Y!}#O-x#O#P#q#P#Q-}#R#S+Y#T#U+Y#U#V+n#V#f+Y#f#g-Q#g#i+Y#i#j,f#j#o+Y$g~+Y~#eSr~XY#`[]#`pq#`#O#P#q~#tQYZ#`]^#`~#}P!_!`$Q~$VO_~~$[Vw~OY$VZ]$V^r$Vrs$qs#O$V#O#P$v#P~$V~$vOw~~$yPO~$V~%RVw~OY$|Z]$|^w$|wx$qx#O$|#O#P%h#P~$|~%kPO~$|~%sOj~~%xOk~~%}Of~~&QP!Q![&T~&YUV~!Q![&T!g!h&l!l!m'a#R#S&T#X#Y&l#^#_'a~&oR{|&x}!O&x!Q!['O~&{P!Q!['O~'TSV~!Q!['O!l!m'a#R#S'O#^#_'a~'fOV~~'k]V~!O!P%}!Q![(d!d!e)O!g!h&l!l!m'a!q!r)j!z!{*O#R#S(d#U#V)O#X#Y&l#^#_'a#c#d)j#l#m*O~(iVV~!O!P%}!Q![(d!g!h&l!l!m'a#R#S(d#X#Y&l#^#_'a~)RR!Q!R)[!R!S)[#R#S)[~)aRV~!Q!R)[!R!S)[#R#S)[~)mQ!Q!Y)s#R#S)s~)xQV~!Q!Y)s#R#S)s~*RS!Q![*_!c!i*_#R#S*_#T#Z*_~*dSV~!Q![*_!c!i*_#R#S*_#T#Z*_~*uOW~~*zQ_~!_!`$Q!`!a$Q~+VP_~!_!`$Q~+_Tu~!Q![+Y!c!}+Y#R#S+Y#T#o+Y$g~+Y~+sZu~rs$Vwx$|!Q![+Y!c!t+Y!t!u,f!u!}+Y#R#S+Y#T#f+Y#f#g,f#g#o+Y$g~+Y~,kVu~rs$Vwx$|!Q![+Y!c!}+Y#R#S+Y#T#o+Y$g~+Y~-VZu~rs$Vwx$|!Q![+Y!c!t+Y!t!u,f!u!}+Y#R#S+Y#T#U+Y#U#V,f#V#o+Y$g~+Y~-}OS~~.SOg~",
  tokenizers: [0],
  topRules: {"Script":[0,1]},
  specialized: [{term: 37, get: value => spec_identifier[value] || -1}],
  tokenPrec: 0
})
