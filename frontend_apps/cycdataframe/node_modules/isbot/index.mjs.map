{"version":3,"file":"index.mjs.map","sources":["src/amend/index.js","src/isbot/index.js","src/index.js"],"sourcesContent":["/**\n * Mutate given list of patter strings\n * @param {string[]} list\n * @returns {string[]}\n */\nexport function amend (list) {\n  try {\n    // Risk: Uses lookbehind assertion, avoid breakage in parsing by using RegExp constructor\n    new RegExp('(?<! cu)bot').test('dangerbot') // eslint-disable-line prefer-regex-literals\n  } catch (error) {\n    // Skip regex fixes\n    return list\n  }\n\n  // Addresses: Cubot device\n  list.splice(list.lastIndexOf('bot'), 1)\n  list.push('(?<! cu)bot')\n  // Addresses: Android webview\n  list.splice(list.lastIndexOf('google'), 1)\n  list.push('(?<! (channel\\\\/|google\\\\/))google(?!(app|\\\\/google))')\n\n  // Addresses: Yandex browser\n  list.splice(list.lastIndexOf('search'), 1)\n  list.push('(?<! (ya|yandex))search')\n  // Addresses: libhttp browser\n  list.splice(list.lastIndexOf('http'), 1)\n  list.push('(?<!(lib))http')\n  // Addresses: java based browsers\n  list.splice(list.lastIndexOf('java'), 1)\n  list.push('java(?!;)')\n  // Addresses: Mozilla nightly build https://github.com/mozilla-mobile/android-components/search?q=MozacFetch\n  list.splice(list.lastIndexOf('fetch'), 1)\n  list.push('(?<!(mozac))fetch')\n\n  return list\n}\n","import list from '../list.json'\nimport { amend } from '../amend/index.js'\n\namend(list)\n\n/**\n * Test user agents for matching patterns\n */\nexport class Isbot {\n  /**\n   * @type {string[]}\n   */\n  #list;\n\n  /**\n   * @type {RegExp}\n   */\n  #pattern;\n\n  constructor (patterns) {\n    this.#list = patterns || list.slice()\n    this.#update()\n  }\n\n  /**\n   * Recreate the pattern from rules list\n   */\n  #update () {\n    this.#pattern = new RegExp(\n      this.#list.join('|'),\n      'i'\n    )\n  }\n\n  /**\n   * Find the first index of an existing rule or -1 if not found\n   * @param  {string} rule\n   * @returns {number}\n   */\n  #index (rule) {\n    return this.#list.indexOf(rule.toLowerCase())\n  }\n\n  /**\n   * Match given string against out pattern\n   * @param  {string} ua User Agent string\n   * @returns {boolean}\n   */\n  test (ua) {\n    return Boolean(ua) && this.#pattern.test(ua)\n  }\n\n  /**\n   * Get the match for strings' known crawler pattern\n   * @param  {string} ua User Agent string\n   * @returns {string}\n   */\n  find (ua = '') {\n    const match = ua.match(this.#pattern)\n    return match && match[0]\n  }\n\n  /**\n   * Extent patterns for known crawlers\n   * @param  {string[]} filters\n   * @returns {void}\n   */\n  extend (filters = []) {\n    [].push.apply(\n      this.#list,\n      filters.filter(\n        rule => this.#index(rule) === -1\n      ).map(\n        filter => filter.toLowerCase()\n      )\n    )\n    this.#update()\n  }\n\n  /**\n   * Exclude patterns from bot pattern rule\n   * @param  {string[]} filters\n   * @returns {void}\n   */\n  exclude (filters = []) {\n    let { length } = filters\n    while (length--) {\n      const index = this.#index(filters[length])\n      if (index > -1) {\n        this.#list.splice(index, 1)\n      }\n    }\n    this.#update()\n  }\n\n  /**\n   * Create a new Isbot instance using given list or self's list\n   * @param  {string[]} [list]\n   * @returns {Isbot}\n   */\n  spawn (list) {\n    return new Isbot(list || this.#list)\n  }\n}\n","import { Isbot } from './isbot/index.js'\n\nconst createInterface = instance => Object.defineProperties(\n  function isbot (ua) {\n    return instance.test(ua)\n  },\n  {\n    find: { get: () => ua => instance.find(ua) },\n    extend: { get: () => list => instance.extend(list) },\n    exclude: { get: () => list => instance.exclude(list) },\n    spawn: { get: () => list => createInterface(instance.spawn(list)) }\n  }\n)\n\nconst isbot = createInterface(new Isbot())\n\nexport default isbot\n"],"names":["amend","list","RegExp","test","error","splice","lastIndexOf","push","Isbot","patterns","slice","ua","Boolean","match","filters","apply","filter","rule","map","toLowerCase","length","index","join","indexOf","createInterface","instance","Object","defineProperties","isbot","find","get","extend","exclude","spawn"],"mappings":"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"}