name: Test

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'LICENSE'

  pull_request:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'

jobs:

  prebuild:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: |
            cnext_app/package-lock.json
            cnext_server/server/package-lock.json

      - name: Install dependencies
        working-directory: ./cnext_app
        run: npm ci

      - name: Install dependencies
        working-directory: ./cnext_server/server
        run: npm ci

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'poetry'

      - name: Install dependencies
        working-directory: ./cnext_server/server
        run: |
          poetry env use 3.9
          poetry install

  build:
    runs-on: ubuntu-latest
    needs: prebuild
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: |
            cnext_app/package-lock.json
            cnext_server/server/package-lock.json

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'poetry'

      - name: Install dependencies
        working-directory: ./cnext_app
        run: npm ci

      - name: Install dependencies
        working-directory: ./cnext_server/server
        run: npm ci

      - name: Build IDE
        working-directory: ./cnext_app
        run: npm run build

      - name: Install dependencies
        working-directory: ./cnext_server/server
        run: |
          poetry env use 3.9
          poetry install

      - name: Copy output
        run: cp -rf ./cnext_app/out ./cnext_server/public

      - name: Cypress run
        uses: cypress-io/github-action@v4
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        with:
          record: true
          working-directory: cnext_app/tests/intergration
          browser: chrome
          start: |
            npm run  --prefix ../../../cnext_server/server start
          spec: |
            cypress/**/*.spec.js
